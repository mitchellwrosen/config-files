# main
snippet main
	int main(int argc, const char **argv) {
		${1}
		return 0;
	}
##
## Preprocessor
# #include <...>
snippet inc
	#include <${1:iostream}>${2}
# #include "..."
snippet incc
	#include "${1:`Filename("$1.h")`}"${2}
# ifndef...define...endif
snippet ifndef
	#ifndef $1
	#define ${1:FOO} ${2:BAR}
	#endif${3}
# define
snippet def
	#define ${1:FOO} ${2:BAR}
# ifdef...endif
snippet ifdef
	#ifdef ${1:FOO}
	#endif
# if
snippet #if
	#if ${1:FOO}
	#endif
# header include guard
snippet once
	#ifndef ${1:`toupper(Filename('$1_H_', 'UNTITLED_H_'))`}
	#define $1
	${2}
	#endif   // $1
##
## Control Statements
# if
snippet if
	if (${1:/* foo */}) {
		${2:/* bar */}
	} ${3}
# else
snippet el
	else {
		${1}
	}${3}
# else if
snippet elif
	else if (${1:/* foo */}) {
		${2:/* bar */}
	} ${3}
# ternary
snippet t
	${1:foo} ? ${2:bar} : ${3:baz}
# switch
snippet sw
	switch (${1:/* foo */}) {
		case ${2:/* bar */}:
			${3}
			break;
		default:
			${4}
	}${5}
# case
snippet case
	case ${1:/* foo */}:
		${2}
		break;${3}
##
## Loops
# for
snippet for
	for (int ${2:i} = 0; $2 < ${1:foo}; ${3:++}$2) {
		${4:/* foo */}
	}${5}
# while
snippet wh
	while (${1:/* foo */}) {
		${2:/* bar */}
	}${3}
# do... while
snippet do
	do {
		${2:/* foo */}
	} while (${1:/* bar */});${3}
##
## Functions
# function definition
snippet fun
	${1:void} ${2:foo}(${3:/* bar */}) {
		${4:/* baz */}
	}${5}
# function declaration
snippet fund
	${1:void} ${2:foo}(${3});${4}
##
## Types
# typedef
snippet td
	typedef ${1:int} ${2:Foo};${3}
# struct
snippet st
	struct ${1:Foo} {
		$1() { };
		~$1() { };

		${2:/* bar */}
	};${3}
# typedef struct
snippet tds
	typedef struct ${2:_$1 }{
		${3:/* data */}
	} ${1:`Filename('$1_t', 'name')`};${4}
# typedef enum
snippet tde
	typedef enum {
		${1:/* data */}
	} ${2:foo};${3}
##
## Input/Output
# printf
snippet pr
	printf("${1:%s}\n"${2});${3}
# fprintf (again, this isn't as nice as TextMate's version, but it works)
snippet fpr
	fprintf(${1:stderr}, "${2:%s}\n"${3});${4}
##
## Miscellaneous
snippet .
	[${1}]${2}
# GPL
snippet gpl
	/*
	 * This program is free software; you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation; either version 2 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program; if not, write to the Free Software
	 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
	 *
	 * Copyright (C) ${1:Author}, `strftime("%Y")`
	 */
	${2}
